Используйте библиотеку pytest и напишите тесты для существующего кода проекта.
Ниже приведены примеры тест-кейсов. Вы можете использовать их или реализовать свои.


Примеры тест-кейсов для существующего функционала
Модуль masks
Функция
get_mask_card_number: Тестирование правильности маскирования номера карты.
Проверка работы функции на различных входных форматах номеров карт, включая граничные случаи и
нестандартные длины номеров.
Проверка, что функция корректно обрабатывает входные строки, где отсутствует номер карты.
Функция
get_mask_account: Тестирование правильности маскирования номера счета.
Проверка работы функции с различными форматами и длинами номеров счетов.
Проверка, что функция корректно обрабатывает входные строки, где номер счета меньше ожидаемой длины.

Модуль widget
Функция
mask_account_card: Тесты для проверки, что функция корректно распознает и применяет нужный тип маскировки в
зависимости от типа входных данных (карта или счет).
Параметризованные тесты с разными типами карт и счетов для проверки универсальности функции.
Тестирование функции на обработку некорректных входных данных и проверка ее устойчивости к ошибкам.
Функция
get_data: Тестирование правильности преобразования даты.
Проверка работы функции на различных входных форматах даты, включая граничные случаи и нестандартные строки с датами.
Проверка, что функция корректно обрабатывает входные строки, где отсутствует дата.

Модуль processing
Функция
filter_by_state: Тестирование фильтрации списка словарей по заданному статусу state.
Проверка работы функции при отсутствии словарей с указанным статусом state в списке.
Параметризация тестов для различных возможных значений статуса state.
Функция
sort_by_date: Тестирование сортировки списка словарей по датам в порядке убывания и возрастания.
Проверка корректности сортировки при одинаковых датах. Тесты на работу функции с некорректными или нестандартными
форматами дат.

Общие аспекты тестирования
Фикстуры. Для всех тестов создайте фикстуры, которые предоставят тестовые данные для списков словарей, включая
различные случаи и комбинации
state и date.
Покрытие тестами. Убедитесь, что все ветви кода и исключения, которые могут быть сгенерированы вашими функциями,
тестируются.

Примените фикстуры для создания необходимых входных данных для тестов.
Используйте параметризацию в тестах для обеспечения тестирования функциональности с различными входными данными,
избегайте дублирования кода.
Добейтесь покрытия тестами не менее 80% кода.