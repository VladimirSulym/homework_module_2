Критерии оценки
Наставник примет вашу работу, если в ней соблюдаются следующие условия. Проверьте работу по критериям перед тем, как отправить ее.


Посмотреть критерии
 Работа с Git и GitHub
Домашка сдана через pull request из ветки домашней работы в ветку
develop
.
В коммиты не добавлены игнорируемые файлы.
В README-файл добавлена информация о новой функциональности проекта.
Реализация поиска с помощью регулярных выражений
Реализована функция для поиска в списке словарей операций по заданной строке — описанию с использованием библиотеки
re
.
Функция для поиска в списке словарей операций по заданной строке принимает два аргумента: список с транзакциями и строку для поиска.
Функция для поиска в списке словарей операций по заданной строке использует библиотеку
re
 для поиска.
Функция для поиска в списке словарей операций по заданной строке возвращает список словарей с операциями, у которых в описании есть строка, переданная аргументу функции.
Реализация подсчета категорий
Реализована функция для подсчета количества банковских операций определенного типа.
Функция для подсчета количества банковских операций определенного типа принимает два аргумента: список с транзакциями и словарь для подсчета транзакций по описанию.
Функция для подсчета количества банковских операций определенного типа использует
Counter
 из библиотеки
collections
.
Функция для подсчета количества банковских операций определенного типа возвращает словарь, в котором ключи — это названия категорий, а значения — это количество операций в каждой категории.
Сборка модулей
Написана функция
main
 в модуле
main
, которая отвечает за основную логику проекта с пользователем и связывает функциональности между собой.
Функция
main
 предоставляет пользовательский интерфейс в соответствии с условиями задания.
Тестирование
Написаны тесты к новым функциональностям проекта.
Функциональный код покрыт тестами на 80% и более.
При запуске тестов командой
pytest
 все тесты завершаются успешно.
Оформление кода
При запуске линтера Flake8 выдается не более 5 ошибок.
При вызове
isort
 форматируется не более 1 импорта.
Для всех реализованных функций написаны docstring.
Нейминг функций отвечает правилам оформления кода PEP 8.

Задание
Вам поручено реализовать часть логики, предполагающую работу с регулярными выражениями. Используйте для этого библиотеку
re
.

Задачи
Напишите функцию, которая будет принимать список словарей с данными о банковских операциях и строку поиска, а возвращать список словарей, у которых в описании есть данная строка. При реализации этой функции можно использовать библиотеку
re
 для работы с регулярными выражениями.
Расположение новой функции в структуре проекта определите самостоятельно.

Напишите функцию, которая будет принимать список словарей с данными о банковских операциях и список категорий операций, а возвращать словарь, в котором ключи — это названия категорий, а значения — это количество операций в каждой категории.
Категории операций хранятся в поле
description
.

Расположение новой функции в структуре проекта определите самостоятельно.

Напишите функцию
main
 в модуле
main
, которая отвечает за основную логику проекта и связывает функциональности между собой.
Ожидаемое поведение программы должно быть следующим:

Программа приветствует пользователя:
Программа: Привет! Добро пожаловать в программу работы
с банковскими транзакциями.
Выберите необходимый пункт меню:
1. Получить информацию о транзакциях из JSON-файла
2. Получить информацию о транзакциях из CSV-файла
3. Получить информацию о транзакциях из XLSX-файла

Пользователь: 1

Программа: Для обработки выбран JSON-файл.

После пользователь выбирает статус интересующих его операций.
Не забудьте, что для пользователя
executed
,
Executed
 и
EXECUTED
 — это одно и то же, а для программы — разное. Используйте приведение к единому регистру.

Программа: Введите статус, по которому необходимо выполнить фильтрацию.
Доступные для фильтровки статусы: EXECUTED, CANCELED, PENDING

Пользователь: EXECUTED

Программа: Операции отфильтрованы по статусу "EXECUTED"

В случае, если пользователь ввел неверный статус, программа не должна падать в ошибку, а должна возвращать пользователя к вводу корректного статуса:

Пользователь: test

Программа: Статус операции "test" недоступен.

Программа: Введите статус, по которому необходимо выполнить фильтрацию.
Доступные для фильтровки статусы: EXECUTED, CANCELED, PENDING

 После фильтрации программа выводит следующие вопросы для уточнения выборки операций, необходимых пользователю, и выводит в консоль операции, соответствующие выборке пользователя:
Программа: Отсортировать операции по дате? Да/Нет

Пользователь: да

Программа: Отсортировать по возрастанию или по убыванию?

Пользователь: по возрастанию/по убыванию

Программа: Выводить только рублевые тразакции? Да/Нет

Пользователь: да

Программа: Отфильтровать список транзакций по определенному слову
в описании? Да/Нет

Пользователь: да/нет

Программа: Распечатываю итоговый список транзакций...

Программа:
Всего банковских операций в выборке: 4

08.12.2019 Открытие вклада
Счет **4321
Сумма: 40542 руб.

12.11.2019 Перевод с карты на карту
MasterCard 7771 27** **** 3727 -> Visa Platinum 1293 38** **** 9203
Сумма: 130 USD

18.07.2018 Перевод организации
Visa Platinum 7492 65** **** 7202 -> Счет **0034
Сумма: 8390 руб.

03.06.2018 Перевод со счета на счет
Счет **2935 -> Счет **4321
Сумма: 8200 EUR

Если выборка оказалась пустой, программа выводит сообщение:

Программа: Не найдено ни одной транзакции, подходящей под ваши
условия фильтрации

* Дополнительное задание
Типизируйте написанный код и добейтесь того, чтобы
mypy
 при запуске не выдавал ошибок.

Дополнительное задание, помеченное звездочкой, желательно, но не обязательно выполнять.